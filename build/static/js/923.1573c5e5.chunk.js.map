{"version":3,"file":"static/js/923.1573c5e5.chunk.js","mappings":"uKAGA,MA2FA,EA3FmBA,IAA8D,IAA7D,QAAEC,EAAO,eAAEC,EAAc,aAAEC,EAAY,cAACC,GAAeJ,EACzE,MAAOK,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,MAmB/CC,EAAiBP,EAAQQ,QAAO,CAACC,EAAKC,KAC1C,MAAMC,EAAWD,EAAOE,eAAeD,SAKvC,OAJKF,EAAIE,KACPF,EAAIE,GAAY,IAElBF,EAAIE,GAAUE,KAAKH,GACZD,CAAG,GACT,CAAC,GAMJ,OACEK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAYC,GAAG,kBAAiBC,SAC5CC,OAAOC,KAAKZ,GAAgBa,KAAI,CAACT,EAAUU,KAC1CC,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iBAAgBE,SAAA,EAC7BH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAmBC,GAAI,WAAWK,IAAQJ,UACtDH,EAAAA,EAAAA,KAAA,UACEC,UAAW,qBAAoBX,IAAmBO,EAAW,GAAK,aAClEY,KAAK,SACLC,QAASA,IAZGb,KACtBN,EAAkBD,IAAmBO,EAAW,KAAOA,EAAS,EAWvCc,CAAed,GAC9B,gBAAeP,IAAmBO,EAClC,gBAAe,YAAYU,IAAQJ,SAElCN,OAGLG,EAAAA,EAAAA,KAAA,OACEE,GAAI,YAAYK,IAChBN,UAAW,gCAA+BX,IAAmBO,EAAW,OAAS,IACjF,kBAAiB,WAAWU,IAC5B,iBAAe,mBAAkBJ,UAEjCH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBE,UAC7BH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYE,SACvBV,EAAeI,GAAUS,KAAKV,IAC7BY,EAAAA,EAAAA,MAAA,MACEP,UAAU,oEAAmEE,SAAA,EAG7EH,EAAAA,EAAAA,KAAA,QAAAG,SAAOP,EAAOgB,eACdJ,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACEH,EAAAA,EAAAA,KAAA,UACEC,UAAU,uBACVS,QAASA,IAAMvB,EAAeS,GAAQO,UAEtCH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iBAGC,IAAhBZ,IACEW,EAAAA,EAAAA,KAAA,UACAC,UAAU,iBACVS,QAASA,IAtEVG,WACnB,IACE,MAAM,KAACC,SAAYC,EAAAA,EAAKC,OAAO,WAAWd,KAC1Ce,QAAQC,IAAI,2BAA2BJ,KACvC1B,IACI0B,EAAKK,QACPC,EAAAA,GAAMD,QAAQL,EAAKK,QAAQE,SAAWP,EAAKO,SAE3CD,EAAAA,GAAME,MAAMR,EAAKQ,MAAMD,SAAWP,EAAKQ,MAG3C,CAAE,MAAOA,GACPL,QAAQK,MAAM,yBAA0BA,EAAMD,QAChD,GAyDmCE,CAAa3B,EAAOM,IAAIC,UAEvCH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,uBAhBZL,EAAOM,cAvBaK,MAmDnC,C,iECtFV,MA2FA,EA3FuBtB,IAWhB,IAXiB,UACtBuC,EAAS,OACTC,EAAM,QACNC,EAAO,SACPC,EAAQ,UACRC,EAAS,SACTC,EAAQ,YACRC,EAAW,OACXC,EAAM,MACNC,EAAK,KACLC,GACDhD,EACC,MAAMiD,EAAgBC,IACpBL,EAAY,IAAKD,EAAU,CAACM,EAAEC,OAAOC,MAAOF,EAAEC,OAAOE,OAAQ,EA6C/D,OACEtC,EAAAA,EAAAA,KAAA,OACEC,UAAW,wBAAuBuB,EAAY,UAAY,UAC1De,SAAS,KACTC,KAAK,SAAQrC,UAEbH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAeuC,KAAK,WAAUrC,UAC3CK,EAAAA,EAAAA,MAAA,OAAKP,UAAU,gBAAeE,SAAA,EAC5BK,EAAAA,EAAAA,MAAA,OAAKP,UAAU,eAAcE,SAAA,EAC3BK,EAAAA,EAAAA,MAAA,MAAIP,UAAU,cAAaE,SAAA,CACxByB,EAAY,OAAS,MAAM,IAAEH,MAEhCzB,EAAAA,EAAAA,KAAA,UAAQS,KAAK,SAASR,UAAU,YAAYS,QAASgB,QAEvD1B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYE,SAnD1B4B,EAAOzB,KAAI,CAACmC,EAAOlC,KACxB,GAAmB,WAAfkC,EAAMhC,KAAmB,CAC3B,MAAMiC,EAAyB,YAAfD,EAAMJ,KAClBL,EAAM1B,KAAKqC,IAAI,CAAQL,MAAOK,EAAKzC,GAAI0C,MAAOD,EAAKE,aACnDZ,EAAK3B,KAAKwC,IAAG,CAAQR,MAAOQ,EAAI5C,GAAI0C,MAAOE,EAAIC,YAEnD,OACEvC,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBE,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,SAAAG,SAAQsC,EAAMG,SACd5C,EAAAA,EAAAA,KAACgD,EAAAA,EAAY,CACXlC,KAAM4B,EACNO,SAAS,EACTC,cAAerB,EAASY,EAAMJ,MAC9Bc,YAAa,UAAUV,EAAMG,QAC7BQ,sBAAwBC,IACtBC,OApBgBjB,EAoBKI,EAAMJ,KApBLa,EAoByB,OAAdG,QAAc,IAAdA,OAAc,EAAdA,EAAgBf,WAnB7DR,EAAY,IAAKD,EAAU,CAACQ,GAAOa,IADRI,IAACjB,EAAMa,CAqBvB,MATiC3C,EAa1C,CAEA,OACEC,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBE,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,SAAAG,SAAQsC,EAAMG,SACd5C,EAAAA,EAAAA,KAAA,SACES,KAAMgC,EAAMhC,KACZ4B,KAAMI,EAAMJ,KACZC,MAAOT,EAASY,EAAMJ,OAAS,GAC/BkB,SAAUrB,EACVjC,UAAU,mBAPwBM,EAShC,OAoBJC,EAAAA,EAAAA,MAAA,OAAKP,UAAU,eAAcE,SAAA,EAC3BH,EAAAA,EAAAA,KAAA,UAAQS,KAAK,SAASR,UAAU,oBAAoBS,QAASgB,EAAQvB,SAAC,YAGtEH,EAAAA,EAAAA,KAAA,UACES,KAAK,SACLR,UAAU,kBACVS,QAASA,IAAMiB,EAASE,GAAU1B,SAEjCyB,EAAY,SAAW,kBAK5B,C,kECxFV,MAAMoB,UAAqBQ,EAAAA,UACzBC,WAAAA,CAAYC,GACVC,MAAMD,GAAO,KAefxB,aAAgB0B,IACdC,KAAKC,SAAS,CACVZ,cAAeU,IAEnBC,KAAKH,MAAMN,sBAAsBQ,EAAgB,EAjBjDC,KAAKE,MAAQ,CACXb,cAAeW,KAAKH,MAAMR,gBAAkBW,KAAKH,MAAMT,QAAU,GAAK,IAE1E,CAEAe,kBAAAA,CAAmBC,GACbA,EAAUf,gBAAkBW,KAAKH,MAAMR,eACzCW,KAAKC,SAAS,CACZZ,cAAeW,KAAKH,MAAMR,gBAAkBW,KAAKH,MAAMT,QAAU,GAAK,KAG5E,CAUAiB,MAAAA,GACE,MAAM,cAAEhB,GAAkBW,KAAKE,OACzB,KAAEjD,EAAI,YAAEqC,EAAW,MAAEgB,EAAK,iBAAEC,EAAgB,cAAEC,EAAa,QAAEpB,GAAYY,KAAKH,MAEpF,OACE1D,EAAAA,EAAAA,KAAA,OAAKC,UAAW,qBAAoBkE,EAAQ,KAAKA,IAAU,IAAKhE,UAC9DH,EAAAA,EAAAA,KAACsE,EAAAA,GAAM,CACLrE,UAAU,WACVkD,YAAaA,EACbb,MAAOY,EACPR,QAAS5B,EACTyC,SAAUM,KAAK3B,aACfe,QAASA,EACTsB,aAAW,EACXC,OAAQ,CACNC,QAAUC,IAAQ,IACbA,EACHC,OAAQ,YAEVxB,YAAcuB,IAAQ,IACjBA,EACHE,MAAOR,GAAoB,YAE7BS,KAAOH,IAAQ,IACVA,EACHI,SAAU,WAEZC,SAAWL,IAAQ,IACdA,EACHM,UAAW,IACXC,UAAW,UAGfZ,cAAeA,GAAiB,UAIxC,EAGF,S,sHC3DA,MA0JA,EA1J6Ba,KAC3B,MAAOC,EAAYC,IAAiB5F,EAAAA,EAAAA,UAAS,KACtC6F,EAAgBC,IAAqB9F,EAAAA,EAAAA,UAAS,OAC9C+F,EAAkBC,IAAuBhG,EAAAA,EAAAA,UAAS,KAClDgC,EAAWiE,IAAgBjG,EAAAA,EAAAA,WAAS,IACpCqC,EAAUC,IAAetC,EAAAA,EAAAA,UAAS,CACvCkG,QAAS,GACTC,cAAe,MAEV3D,EAAO4D,IAAYpG,EAAAA,EAAAA,UAAS,KAC5ByC,EAAM4D,IAAWrG,EAAAA,EAAAA,UAAS,KAC1BoC,EAAWkE,IAAgBtG,EAAAA,EAAAA,WAAS,IACpCuG,EAAQC,IAAaxG,EAAAA,EAAAA,UAAS,OAErCyG,EAAAA,EAAAA,YAAU,KACR7G,GAAc,GACb,IAEH,MAAMA,EAAeyB,UACnB,IACE,MAAOqF,EAAgBC,EAAeC,SAAsBC,QAAQC,IAAI,CACtEvF,EAAAA,EAAKwF,IAAI,YACTxF,EAAAA,EAAKwF,IAAI,UACTxF,EAAAA,EAAKwF,IAAI,WAEXnB,EAAcc,EAAepF,KAAK5B,SAClC0G,EAASO,EAAcrF,KAAKkB,OAC5B4D,EAASO,EAAcrF,KAAKkB,OAC5B6D,EAAQO,EAAatF,KAAKgC,IAC5B,CAAE,MAAOxB,GACPF,EAAAA,GAAME,MAAOA,EAAMD,SAAW,uBAChC,GAGImF,EAAqB3F,UACzByE,EAAkB1F,EAAOM,IACzB,IACE,MAAMuG,QAAiB1F,EAAAA,EAAKwF,IAAI,eAAe3G,EAAOM,MACtDsF,EAAoBiB,EAAS3F,KAAK4F,aAClCtF,EAAAA,GAAMD,QAAQsF,EAAS3F,KAAKO,QAC9B,CAAE,MACAmE,EAAoB,GACtB,GAgEF,OACEhF,EAAAA,EAAAA,MAAA,OAAKmG,MAAO,CAAEC,UAAW,QAAU3G,UAAU,YAAWE,SAAA,EACrDH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oBAAmBE,SAAC,6BACnCK,EAAAA,EAAAA,MAAA,OAAKP,UAAU,MAAKE,SAAA,EAClBK,EAAAA,EAAAA,MAAA,OAAKP,UAAU,WAAUE,SAAA,EACvBH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaE,SAAC,iBAC5BH,EAAAA,EAAAA,KAAC6G,EAAAA,EAAU,CACT3H,QAASiG,EACThG,eAAgBqH,EAChBpH,aAAcA,QAIlBoB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,WAAUE,SAAA,EACvBH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaE,SAAC,uBAC3BkF,IACC7E,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACEK,EAAAA,EAAAA,MAAA,UAAQE,QAnDFoG,KAChBrB,GAAa,GACbK,GAAa,GACbhE,EAAY,CAAE4D,QAAS,GAAIC,cAAe,IAAK,EAgDT1F,UAAU,uBAAsBE,SAAA,CAAC,2BACpCH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,+BAEtCD,EAAAA,EAAAA,KAAC+G,EAAAA,EAAc,CACbjG,KAAMyE,EACNyB,QAlCE,CACd,CAAEC,IAAK,gBAAiBrE,MAAO,eAC/B,CAAEqE,IAAK,gBAAiBrE,MAAO,sBAC/B,CAAEqE,IAAK,mBAAoBrE,MAAO,QAgCtBsE,OAnDSC,IACrB1B,GAAa,GACbK,GAAa,GACbE,EAAUmB,EAAYjH,IACtB4B,EAAY,CACV4D,QAASyB,EAAYzB,QACrBC,cAAewB,EAAYxB,eAC3B,EA6CUyB,SA1CkBvG,UAC9B,MAAM4F,QAAiB1F,EAAAA,EAAKC,OAAO,eAAed,KAClDkB,EAAAA,GAAMD,QAAQsF,EAAS3F,KAAKO,SAC5BmF,EAAmB,CAAEtG,GAAImF,GAAiB,EAwC9BgC,QAAQ,cAOlBrH,EAAAA,EAAAA,KAACsH,EAAAA,EAAc,CACb9F,UAAWA,EACXC,OAAQ,qBACRC,QAASA,IAAM+D,GAAa,GAC5B9D,SAjG4Bd,UAChC,IAAI4F,EACJ,IACM7E,GACF6E,QAAiB1F,EAAAA,EAAKwG,IAAI,cAAcxB,IAAU,IAC7CjF,EACH0G,UAAWnC,IAEbjE,EAAAA,GAAMD,QAAQsF,EAAS3F,KAAKO,SAAW,iCAEvCoF,QAAiB1F,EAAAA,EAAK0G,KAAK,cAAe,IACrC3G,EACH0G,UAAWnC,IAEbjE,EAAAA,GAAMD,QAAQsF,EAAS3F,KAAKO,SAAW,8BAEzCmF,EAAmB,CAAEtG,GAAImF,IACzBvD,EAAY,CAAE4D,QAAS,GAAIC,cAAe,KAC1CF,GAAa,GACbK,GAAa,GACbE,EAAU,KACZ,CAAE,MAAO1E,GACPL,QAAQK,MAAM,yBAA0BA,GACxCF,EAAAA,GAAME,MAAMA,EAAMmF,SAAS3F,KAAKO,SAAW,uBAC7C,GA0EIO,UAAWA,EACXC,SAAUA,EACVC,YAAaA,EACbC,OA9Cc,CAClB,CAAEM,KAAM,UAAWO,MAAO,OAAQnC,KAAM,UACxC,CAAE4B,KAAM,gBAAiBO,MAAO,qBAAsBnC,KAAM,WA6CxDuB,MAAOA,EACPC,KAAMA,MAEJ,C","sources":["Component/RecipeComponent/RecipeList.js","Component/SharedComponent/ModelComponent.js","app/signedin/components/dropdown/dropdown.js","pages/RecipeIngridentsPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport http from '../../http-common';\r\nimport { toast } from 'react-toastify';\r\nconst RecipeList = ({ recipes, onSelectRecipe, fetchRecipes,deleteButtons }) => {\r\n  const [activeCategory, setActiveCategory] = useState(null);\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      const {data}=await http.delete(`/recipe/${id}`);\r\n      console.log(`the data of deleting is ${data}`)\r\n      fetchRecipes();\r\n      if (data.success) {\r\n        toast.success(data.success.message || data.message);\r\n      } else {\r\n        toast.error(data.error.message || data.error);\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Error deleting recipe:', error.message);\r\n    }\r\n  };\r\n\r\n  // Group recipes by category\r\n  const groupedRecipes = recipes.reduce((acc, recipe) => {\r\n    const category = recipe.RecipeCategory.category;\r\n    if (!acc[category]) {\r\n      acc[category] = [];\r\n    }\r\n    acc[category].push(recipe);\r\n    return acc;\r\n  }, {});\r\n\r\n  const toggleCategory = (category) => {\r\n    setActiveCategory(activeCategory === category ? null : category);\r\n  };\r\n\r\n  return (\r\n    <div className=\"accordion\" id=\"recipeAccordion\">\r\n      {Object.keys(groupedRecipes).map((category, index) => (\r\n        <div className=\"accordion-item\" key={index}>\r\n          <h2 className=\"accordion-header\" id={`heading-${index}`}>\r\n            <button\r\n              className={`accordion-button ${activeCategory === category ? '' : 'collapsed'}`}\r\n              type=\"button\"\r\n              onClick={() => toggleCategory(category)}\r\n              aria-expanded={activeCategory === category}\r\n              aria-controls={`collapse-${index}`}\r\n            >\r\n              {category}\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id={`collapse-${index}`}\r\n            className={`accordion-collapse collapse ${activeCategory === category ? 'show' : ''}`}\r\n            aria-labelledby={`heading-${index}`}\r\n            data-bs-parent=\"#recipeAccordion\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <ul className=\"list-group\">\r\n                {groupedRecipes[category].map((recipe) => (\r\n                  <li\r\n                    className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n                    key={recipe.id}\r\n                  >\r\n                    <span>{recipe.recipe_name}</span>\r\n                    <div>\r\n                      <button\r\n                        className=\"btn btn-primary me-2\"\r\n                        onClick={() => onSelectRecipe(recipe)}\r\n                      >\r\n                        <i className=\"bi bi-eye\"></i>\r\n                      </button>\r\n                     {\r\n                      deleteButtons===true && (\r\n                        <button\r\n                        className=\"btn btn-danger\"\r\n                        onClick={() => handleDelete(recipe.id)}\r\n                      >\r\n                        <i className=\"bi bi-trash\"></i>\r\n                      </button>\r\n                      )\r\n                     }\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeList;\r\n","\r\nimport React from \"react\";\r\nimport DropDownList from \"../../app/signedin/components/dropdown/dropdown\";\r\n\r\nconst ModalComponent = ({\r\n  showModal,\r\n  header,\r\n  onClose,\r\n  onSubmit,\r\n  isEditing,\r\n  formData,\r\n  setFormData,\r\n  fields,\r\n  items,\r\n  uoms,\r\n}) => {\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleDropdownChange = (name, selectedValue) => {\r\n    setFormData({ ...formData, [name]: selectedValue });\r\n  };\r\n\r\n  const renderFormFields = () => {\r\n    return fields.map((field, index) => {\r\n      if (field.type === \"select\") {\r\n        const options = field.name === \"item_id\" \r\n          ? items.map((item) => ({ value: item.id, label: item.itemname }))\r\n          : uoms.map((uom) => ({ value: uom.id, label: uom.uomname }));\r\n\r\n        return (\r\n          <div className=\"form-group mb-3\" key={index}>\r\n            <label>{field.label}</label>\r\n            <DropDownList\r\n              data={options}\r\n              isMulti={false} // Adjust based on your requirement\r\n              selectedValue={formData[field.name]}\r\n              placeholder={`Select ${field.label}`}\r\n              onUpdateSelectedValue={(selectedOption) =>\r\n                handleDropdownChange(field.name, selectedOption?.value)\r\n              }\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <div className=\"form-group mb-3\" key={index}>\r\n          <label>{field.label}</label>\r\n          <input\r\n            type={field.type}\r\n            name={field.name}\r\n            value={formData[field.name] || \"\"}\r\n            onChange={handleChange}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`modal modal-overlay ${showModal ? \"d-block\" : \"d-none\"}`}\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">\r\n              {isEditing ? \"Edit\" : \"Add\"} {header}\r\n            </h5>\r\n            <button type=\"button\" className=\"btn-close\" onClick={onClose}></button>\r\n          </div>\r\n          <div className=\"modal-body\">{renderFormFields()}</div>\r\n          <div className=\"modal-footer\">\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => onSubmit(formData)}\r\n            >\r\n              {isEditing ? \"Update\" : \"Save\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalComponent;\r\n","import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nclass DropDownList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedValue: this.props.selectedValue || (this.props.isMulti ? [] : \"\"),\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.selectedValue !== this.props.selectedValue) {\r\n      this.setState({\r\n        selectedValue: this.props.selectedValue || (this.props.isMulti ? [] : \"\")\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (selectedOptions) => {\r\n    this.setState({\r\n        selectedValue: selectedOptions, // Store the array of selected options directly\r\n    });\r\n    this.props.onUpdateSelectedValue(selectedOptions); // Pass the array to the parent\r\n};\r\n\r\n\r\n  render() {\r\n    const { selectedValue } = this.state;\r\n    const { data, placeholder, width, placeholderColor, menuPlacement, isMulti } = this.props;\r\n\r\n    return (\r\n      <div className={`DropDownList m-1 ${width ? `w-${width}` : \"\"}`}>\r\n        <Select\r\n          className=\"dropdown\"\r\n          placeholder={placeholder}\r\n          value={selectedValue} // Use the selected array directly for multi-select\r\n          options={data}\r\n          onChange={this.handleChange}\r\n          isMulti={isMulti}\r\n          isClearable\r\n          styles={{\r\n            control: (provided) => ({\r\n              ...provided,\r\n              cursor: 'pointer',\r\n            }),\r\n            placeholder: (provided) => ({\r\n              ...provided,\r\n              color: placeholderColor || '#6c757d',\r\n            }),\r\n            menu: (provided) => ({\r\n              ...provided,\r\n              overflow: \"hidden\",\r\n            }),\r\n            menuList: (provided) => ({\r\n              ...provided,\r\n              maxHeight: 200,\r\n              overflowY: \"auto\",\r\n            }),\r\n          }}\r\n          menuPlacement={menuPlacement || \"auto\"}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DropDownList;\r\n","\r\nimport React, { useState, useEffect } from \"react\";\r\nimport http from \"../http-common\";\r\nimport { toast } from \"react-toastify\";\r\nimport RecipeList from \"../Component/RecipeComponent/RecipeList\";\r\nimport TableComponent from \"../Component/SharedComponent/TableComponent\";\r\nimport ModalComponent from \"../Component/SharedComponent/ModelComponent\";\r\n\r\n\r\nconst RecipeIngridentsPage = () => {\r\n  const [recipeList, setRecipeList] = useState([]);\r\n  const [selectedRecipe, setSelectedRecipe] = useState(null);\r\n  const [recipeIngridents, setRecipeIngridents] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    item_id: \"\",\r\n    reference_qty: \"\",\r\n  });\r\n  const [items, setItems] = useState([]);\r\n  const [uoms, setUoms] = useState([]);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editId, setEditId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchRecipes();\r\n  }, []);\r\n\r\n  const fetchRecipes = async () => {\r\n    try {\r\n      const [recipeResponse, itemsResponse, uomsResponse] = await Promise.all([\r\n        http.get(\"/recipes\"),\r\n        http.get(\"/items\"),\r\n        http.get(\"/uoms\"),\r\n      ]);\r\n      setRecipeList(recipeResponse.data.recipes);\r\n      setItems(itemsResponse.data.items);\r\n      setItems(itemsResponse.data.items);\r\n      setUoms(uomsResponse.data.uom);\r\n    } catch (error) {\r\n      toast.error( error.message || \"Error fetching data:\" );\r\n    }\r\n  };\r\n\r\n  const handleSelectRecipe = async (recipe) => {\r\n    setSelectedRecipe(recipe.id);\r\n    try {\r\n      const response = await http.get(`/ingredient/${recipe.id}`);\r\n      setRecipeIngridents(response.data.ingredients);\r\n      toast.success(response.data.message);\r\n    } catch {\r\n      setRecipeIngridents([]);\r\n    }\r\n  };\r\n\r\n  const handleAddDailyConsumption = async (data) => {\r\n    let response;\r\n    try {\r\n      if (isEditing) {\r\n        response = await http.put(`ingredient/${editId}`, {\r\n          ...data,\r\n          recipe_id: selectedRecipe,\r\n        });\r\n        toast.success(response.data.message || \"Record updated successfully\");\r\n      } else {\r\n        response = await http.post(\"/ingredient\", {\r\n          ...data,\r\n          recipe_id: selectedRecipe,\r\n        });\r\n        toast.success(response.data.message || \"Record added successfully\");\r\n      }\r\n      handleSelectRecipe({ id: selectedRecipe }); // Refresh the list\r\n      setFormData({ item_id: \"\", reference_qty: \"\" }); // Reset form\r\n      setShowModal(false);\r\n      setIsEditing(false);\r\n      setEditId(null);\r\n    } catch (error) {\r\n      console.error(\"Error submitting form:\", error);\r\n      toast.error(error.response.data.message || \"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n    setIsEditing(false);\r\n    setFormData({ item_id: \"\", reference_qty: \"\" });\r\n  };\r\n\r\n  const openEditModal = (consumption) => {\r\n    setShowModal(true);\r\n    setIsEditing(true);\r\n    setEditId(consumption.id);\r\n    setFormData({\r\n      item_id: consumption.item_id,\r\n      reference_qty: consumption.reference_qty,\r\n    });\r\n  };\r\n\r\n  const handleDeleteConsumption = async (id) => {\r\n    const response = await http.delete(`/ingredient/${id}`);\r\n    toast.success(response.data.message);\r\n    handleSelectRecipe({ id: selectedRecipe }); // Refresh list\r\n  };\r\n\r\n  const columns = [\r\n    { key: \"Item.itemname\", label: \"Ingredients\" },\r\n    { key: \"reference_qty\", label: \"Reference Quantity\" },\r\n    { key: \"Item.Uom.uomname\", label: \"UOM\" },\r\n  ];\r\n\r\n  const modalFields = [\r\n    { name: \"item_id\", label: \"Item\", type: \"select\" },\r\n    { name: \"reference_qty\", label: \"Reference Quantity\", type: \"number\" },\r\n\r\n  ];\r\n\r\n  return (\r\n    <div style={{ marginTop: \"20vh\" }} className=\"container\">\r\n       <h2 className=\"text-center mb-12\">Recipe Ingredients Page</h2>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <h5 className=\"text-center\">Recipe List</h5>\r\n          <RecipeList\r\n            recipes={recipeList}\r\n            onSelectRecipe={handleSelectRecipe}\r\n            fetchRecipes={fetchRecipes}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-md-8\">\r\n          <h5 className=\"text-center\">Recipe Ingredients</h5>\r\n          {selectedRecipe && (\r\n            <div>\r\n              <button onClick={openModal} className=\"btn btn-success mb-2\">\r\n                Add Recipe Ingredients <i className=\"bi bi-plus-circle-fill\"></i>\r\n              </button>\r\n              <TableComponent\r\n                data={recipeIngridents}\r\n                columns={columns}\r\n                onEdit={openEditModal}\r\n                onDelete={handleDeleteConsumption}\r\n                Action={true}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <ModalComponent\r\n        showModal={showModal}\r\n        header={\"Recipe Ingredients\"}\r\n        onClose={() => setShowModal(false)}\r\n        onSubmit={handleAddDailyConsumption}\r\n        isEditing={isEditing}\r\n        formData={formData}\r\n        setFormData={setFormData}\r\n        fields={modalFields}\r\n        items={items}\r\n        uoms={uoms}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeIngridentsPage;\r\n"],"names":["_ref","recipes","onSelectRecipe","fetchRecipes","deleteButtons","activeCategory","setActiveCategory","useState","groupedRecipes","reduce","acc","recipe","category","RecipeCategory","push","_jsx","className","id","children","Object","keys","map","index","_jsxs","type","onClick","toggleCategory","recipe_name","async","data","http","delete","console","log","success","toast","message","error","handleDelete","showModal","header","onClose","onSubmit","isEditing","formData","setFormData","fields","items","uoms","handleChange","e","target","name","value","tabIndex","role","field","options","item","label","itemname","uom","uomname","DropDownList","isMulti","selectedValue","placeholder","onUpdateSelectedValue","selectedOption","handleDropdownChange","onChange","Component","constructor","props","super","selectedOptions","this","setState","state","componentDidUpdate","prevProps","render","width","placeholderColor","menuPlacement","Select","isClearable","styles","control","provided","cursor","color","menu","overflow","menuList","maxHeight","overflowY","RecipeIngridentsPage","recipeList","setRecipeList","selectedRecipe","setSelectedRecipe","recipeIngridents","setRecipeIngridents","setShowModal","item_id","reference_qty","setItems","setUoms","setIsEditing","editId","setEditId","useEffect","recipeResponse","itemsResponse","uomsResponse","Promise","all","get","handleSelectRecipe","response","ingredients","style","marginTop","RecipeList","openModal","TableComponent","columns","key","onEdit","consumption","onDelete","Action","ModalComponent","put","recipe_id","post"],"sourceRoot":""}