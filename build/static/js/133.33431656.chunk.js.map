{"version":3,"file":"static/js/133.33431656.chunk.js","mappings":"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","sources":["pages/ProfilePage.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\r\nimport http from \"../http-common\";\r\nimport \"../styles/HomePage.css\";\r\n\r\nconst ProfilePage = () => {\r\n  const [userId, setUserId] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(\"auth\");\r\n    if (data) {\r\n      const parsedData = JSON.parse(data);\r\n      setUserId(parsedData.user.id);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      loadData();\r\n    }\r\n  }, [userId]);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      const response = await http.get(`/users/${userId}`);\r\n      const user = response.data;\r\n\r\n      setFormData({\r\n        name: user.name || \"\",\r\n        email: user.email || \"\",\r\n        username: user.username || \"\",\r\n        password: user.password || \"\", // Do not prefill password for security reasons\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Error loading user data\");\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    if (!formData.name.trim()) {\r\n      errors.name = \"Name is required.\";\r\n      formIsValid = false;\r\n    }\r\n\r\n    if (!formData.email.trim()) {\r\n      errors.email = \"Email is required.\";\r\n      formIsValid = false;\r\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\r\n      errors.email = \"Invalid email format.\";\r\n      formIsValid = false;\r\n    }\r\n\r\n    if (!formData.username.trim()) {\r\n      errors.username = \"Username is required.\";\r\n      formIsValid = false;\r\n    }\r\n\r\n    if (formData.password && formData.password.length < 6) {\r\n      errors.password = \"Password must be at least 6 characters.\";\r\n      formIsValid = false;\r\n    }\r\n\r\n    setErrors(errors);\r\n    return formIsValid;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) return;\r\n\r\n    try {\r\n      const response = await http.put(\"/update-profile\", formData);\r\n      toast.success(response.data.message);\r\n    } catch (err) {\r\n      toast.error(err.response?.data?.message || \"Error updating profile\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex mt-100 justify-content-center align-items-center vh-100 mb-5\">\r\n      <div className=\"col-lg-4 col-md-6 col-sm-8 p-4 bg-light bg-white shadow rounded-3\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"text-center mb-3\">\r\n            <img\r\n              src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n              alt=\"profile-img\"\r\n              className=\"rounded-circle\"\r\n              height=\"80\"\r\n            />\r\n          </div>\r\n          <h3 className=\"text-center\">Update Profile</h3>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              className={`form-control ${errors.name ? \"is-invalid\" : \"\"}`}\r\n              placeholder=\"Enter your name\"\r\n            />\r\n            <div className=\"invalid-feedback\">{errors.name}</div>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              className={`form-control ${errors.email ? \"is-invalid\" : \"\"}`}\r\n              placeholder=\"Enter your email\"\r\n            />\r\n            <div className=\"invalid-feedback\">{errors.email}</div>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              value={formData.username}\r\n              onChange={handleChange}\r\n              className={`form-control ${errors.username ? \"is-invalid\" : \"\"}`}\r\n              placeholder=\"Enter your username\"\r\n            />\r\n            <div className=\"invalid-feedback\">{errors.username}</div>\r\n          </div>\r\n          <div className=\"mb-3 position-relative\">\r\n            <label className=\"form-label\">New Password (Optional)</label>\r\n            <div className=\"input-group\">\r\n              <input\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                name=\"password\"\r\n                value={formData.password}\r\n                onChange={handleChange}\r\n                className={`form-control ${errors.password ? \"is-invalid\" : \"\"}`}\r\n                placeholder=\"Enter new password\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-secondary\"\r\n                onClick={togglePasswordVisibility}\r\n                style={{\r\n                  border: \"none\",\r\n                  background: \"transparent\",\r\n                  position: \"absolute\",\r\n                  right: \"10px\",\r\n                  top: \"50%\",\r\n                  transform: \"translateY(-50%)\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                {showPassword ? <FaEye /> : <FaEyeSlash />}\r\n              </button>\r\n            </div>\r\n            <div className=\"invalid-feedback\">{errors.password}</div>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary w-100\">\r\n            Update Profile\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"names":["ProfilePage","userId","setUserId","useState","formData","setFormData","name","email","username","password","showPassword","setShowPassword","errors","setErrors","useEffect","data","localStorage","getItem","parsedData","JSON","parse","user","id","loadData","async","http","get","error","toast","handleChange","e","target","value","_jsx","className","children","_jsxs","onSubmit","preventDefault","validateForm","formIsValid","trim","test","length","response","put","success","message","err","_err$response","_err$response$data","src","alt","height","type","onChange","placeholder","onClick","togglePasswordVisibility","style","border","background","position","right","top","transform","cursor","FaEye","FaEyeSlash"],"sourceRoot":""}