{"version":3,"file":"static/js/124.341ff189.chunk.js","mappings":"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","sources":["hooks/DateTimeFormatter.js","pages/TranscationPage.js"],"sourcesContent":["import moment from 'moment';\r\n\r\nexport const DateFormatter = (dateString, includeTime = false) => {\r\n  const date = moment(dateString);\r\n\r\n  if (!date.isValid()) return 'Invalid Date'; // Handle invalid date\r\n\r\n  const format = includeTime ? 'MMM D, YYYY h:mm A' : 'MMM D, YYYY'; // Format for date with and without time\r\n\r\n  return date.format(format);\r\n};\r\n\r\n\r\n","\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport http from '../http-common';\r\nimport TableComponent from '../Component/SharedComponent/TableComponent';\r\nimport { toast } from 'react-toastify';\r\nimport { DateFormatter } from '../hooks/DateTimeFormatter';\r\nconst TranscationPage = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [totaltransactions, setTotalTransactions] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState(\"\"); // For debounce\r\n  const [searchOption, setSearchOption] = useState(\"item_name\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n\r\n  // Fetch transactions with pagination and search\r\n  const fetchItems = async (page = currentPage, limit = rowsPerPage, search = debouncedSearchTerm) => {\r\n    try {\r\n      const payload = { page, limit };\r\n\r\n      if (search) {\r\n        payload[searchOption] = search;\r\n      }\r\n      if (startDate && endDate) {\r\n        payload.startDate = startDate;\r\n        payload.endDate = endDate;\r\n      }\r\n\r\n      const response = await http.post(\"/transactions/search\", payload);\r\n      setTransactions(response.data.data);\r\n      setTotalTransactions(response.data.pagination.total);\r\n    } catch (error) {\r\n      toast.error(\"Error fetching items:\" || error);\r\n    }\r\n  };\r\n\r\n  // Debounce function to delay API calls\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedSearchTerm(searchTerm);\r\n    }, 500); // Delay of 500ms\r\n\r\n    return () => {\r\n      clearTimeout(handler); // Cleanup function to prevent unnecessary API calls\r\n    };\r\n  }, [searchTerm]);\r\n\r\n  // Fetch data when debounced search term changes\r\n  useEffect(() => {\r\n    fetchItems(1, rowsPerPage, debouncedSearchTerm);\r\n  }, [debouncedSearchTerm, rowsPerPage, currentPage]);\r\n\r\n  // Handle search change\r\n  const handleSearchChange = (value) => {\r\n    setSearchTerm(value);\r\n  };\r\n\r\n  // Handle pagination change\r\n  const handlePageChange = (newPage) => {\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n  // Handle rows per page change\r\n  const handleRowsPerPageChange = (newRowsPerPage) => {\r\n    setRowsPerPage(newRowsPerPage);\r\n    setCurrentPage(1); // Reset to page 1 when changing rows per page\r\n  };\r\n\r\n  // Handle date range search\r\n  const handleDateRangeSearch = async () => {\r\n    if (startDate && endDate) {\r\n      fetchItems(1, rowsPerPage, searchTerm); // Fetch with date range and search term\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchItems();\r\n  }, [currentPage, rowsPerPage]);\r\n\r\n  useEffect(() => {\r\n    setSearchTerm(\"\");\r\n    setStartDate(\"\");\r\n    setEndDate(\"\");\r\n  }, [searchOption]);\r\n\r\n  const handlePrint = () => {\r\n    window.print();\r\n  };\r\n\r\n  const columns = [\r\n   { \r\n         key: 'date', \r\n         label: 'Date', \r\n         render: (value) => DateFormatter(value) // Apply DateFormatter to the date value\r\n       },\r\n    { key: \"Item.itemname\", label: \"Item\" },\r\n    { key: \"credit_quantity\", label: \"Credit Quantity\" },\r\n    { key: \"debit_quantity\", label: \"Debit Quantity\" },\r\n    { key: \"invoice_no\", label: \"Invoice No\" },\r\n    { key: \"Vendor.vendorname\", label: \"Vendor\" },\r\n    { key: \"Recipe.recipe_name\", label: \"Recipe\" },\r\n    { key: \"RecipeCategory.category\", label: \"Category\" },\r\n    { key: \"Uom.uomname\", label: \"UOM\" },\r\n  ];\r\n\r\n  return (\r\n    <div className='container mt-100'>\r\n      <h2 className='text-center'>Transaction Page</h2>\r\n      <div className=\"mb-3 d-flex justify-content-between align-items-center\">\r\n        <div className='d-flex'>\r\n          <select\r\n            className=\"form-select w-auto\"\r\n            value={searchOption}\r\n            onChange={(e) => setSearchOption(e.target.value)}\r\n          >\r\n            <option value=\"item_name\">Item Name</option>\r\n            <option value=\"invoice_no\">Invoice No</option>\r\n            <option value=\"vendor_name\">Vendor Name</option>\r\n            <option value=\"date\">Date</option>\r\n            <option value=\"date-range\">Date Range</option>\r\n          </select>\r\n\r\n          {searchOption === \"date\" ? (\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control w-100 ms-2\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleSearchChange(e.target.value)}\r\n            />\r\n          ) : searchOption === \"date-range\" ? (\r\n            <>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control w-auto ms-2\"\r\n                value={startDate}\r\n                onChange={(e) => setStartDate(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control w-auto ms-2\"\r\n                value={endDate}\r\n                onChange={(e) => setEndDate(e.target.value)}\r\n              />\r\n              <button className=\"btn btn-primary ms-2\" onClick={handleDateRangeSearch}>\r\n                Search\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control w-100 ms-2\"\r\n              value={searchTerm}\r\n              placeholder={`Search by ${searchOption.replace(\"_\", \" \")}...`}\r\n              onChange={(e) => handleSearchChange(e.target.value)}\r\n            />\r\n          )}\r\n              \r\n        </div>\r\n        <button onClick={handlePrint} className=\"btn btn-success\">\r\n       <span className=\"bi bi-printer-fill\" ></span> Print\r\n      </button>\r\n      </div>\r\n\r\n      <TableComponent\r\n        data={transactions}\r\n        columns={columns}\r\n        totalItems={totaltransactions}\r\n        currentPage={currentPage}\r\n        rowsPerPage={rowsPerPage}\r\n        onPageChange={handlePageChange}\r\n        handleRowsPerPageChange={handleRowsPerPageChange}\r\n        handleSearch={handleSearchChange}\r\n        showSearch={false}\r\n        pagenation={true}\r\n        placeholder={`Search by ${searchOption.replace(\"_\", \" \")}...`}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TranscationPage;\r\n"],"names":["DateFormatter","dateString","includeTime","arguments","length","undefined","date","moment","isValid","format","TranscationPage","transactions","setTransactions","useState","totaltransactions","setTotalTransactions","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","searchTerm","setSearchTerm","debouncedSearchTerm","setDebouncedSearchTerm","searchOption","setSearchOption","startDate","setStartDate","endDate","setEndDate","fetchItems","async","page","limit","search","payload","response","http","post","data","pagination","total","error","toast","useEffect","handler","setTimeout","clearTimeout","handleSearchChange","value","columns","key","label","render","_jsxs","className","children","_jsx","onChange","e","target","type","_Fragment","onClick","placeholder","replace","handlePrint","window","print","TableComponent","totalItems","onPageChange","newPage","handleRowsPerPageChange","newRowsPerPage","handleSearch","showSearch","pagenation"],"sourceRoot":""}