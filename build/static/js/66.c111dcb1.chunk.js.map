{"version":3,"file":"static/js/66.c111dcb1.chunk.js","mappings":"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","sources":["app/signedin/components/dropdown/dropdown.js","hooks/useCategory.js","hooks/useRecipe.js","Component/DailyConsumptionComponent/DailyConsumptionEditComponent.js","Component/DailyConsumptionComponent/DailyConsumptionViewTable.js","Component/SharedComponent/CalendarComponent.js","Component/ConsumptionDays/ConsumptionDays.js","pages/ConsumptionPage.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nclass DropDownList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedValue: this.props.selectedValue || (this.props.isMulti ? [] : \"\"),\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.selectedValue !== this.props.selectedValue) {\r\n      this.setState({\r\n        selectedValue: this.props.selectedValue || (this.props.isMulti ? [] : \"\")\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (selectedOptions) => {\r\n    this.setState({\r\n        selectedValue: selectedOptions, // Store the array of selected options directly\r\n    });\r\n    this.props.onUpdateSelectedValue(selectedOptions); // Pass the array to the parent\r\n};\r\n\r\n\r\n  render() {\r\n    const { selectedValue } = this.state;\r\n    const { data, placeholder, width, placeholderColor, menuPlacement, isMulti } = this.props;\r\n\r\n    return (\r\n      <div className={`DropDownList m-1 ${width ? `w-${width}` : \"\"}`}>\r\n        <Select\r\n          className=\"dropdown\"\r\n          placeholder={placeholder}\r\n          value={selectedValue} // Use the selected array directly for multi-select\r\n          options={data}\r\n          onChange={this.handleChange}\r\n          isMulti={isMulti}\r\n          isClearable\r\n          styles={{\r\n            control: (provided) => ({\r\n              ...provided,\r\n              cursor: 'pointer',\r\n            }),\r\n            placeholder: (provided) => ({\r\n              ...provided,\r\n              color: placeholderColor || '#6c757d',\r\n            }),\r\n            menu: (provided) => ({\r\n              ...provided,\r\n              overflow: \"hidden\",\r\n            }),\r\n            menuList: (provided) => ({\r\n              ...provided,\r\n              maxHeight: 200,\r\n              overflowY: \"auto\",\r\n            }),\r\n          }}\r\n          menuPlacement={menuPlacement || \"auto\"}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DropDownList;\r\n","import { useState, useEffect } from \"react\";\r\nimport http from \"../http-common\";\r\nexport default function useCategory() {\r\n  const [category, setCategory] = useState([]);\r\n\r\n  //get category\r\n  const getCategory = async () => {\r\n    try {\r\n      const { data } = await http.get(\"/categories\");\r\n      setCategory(data.categories);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCategory();\r\n  }, []);\r\n\r\n  return category;\r\n}","import { useState, useEffect } from \"react\";\r\nimport http from \"../http-common\";\r\nexport default function useRecipe() {\r\n  const [Recipe, setRecipe] = useState([]);\r\n\r\n  //get category\r\n  const getRecipe = async () => {\r\n    try {\r\n      const { data } = await http.get(\"/recipes\");\r\n      setRecipe(data.recipes);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRecipe();\r\n  }, []);\r\n\r\n  return Recipe;\r\n}","\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport http from \"../../http-common\";\r\n\r\nconst DailyConsumptionEditComponent = ({ ReleasedItem, onClose , id }) => {\r\n  const [showModal, setShowModal] = useState(true);\r\n  const [actualQuantities, setActualQuantities] = useState({});\r\n\r\n  // Update actual quantity for a specific item\r\n  const handleActualQuantityChange = (item_Id, value) => {\r\n    setActualQuantities((prev) => ({\r\n      ...prev,\r\n      [item_Id]: value,\r\n    }));\r\n  };\r\n\r\n  // Populate actual quantities when the modal opens\r\n  useEffect(() => {\r\n    if (ReleasedItem && ReleasedItem.length > 0) {\r\n      const initialQuantities = ReleasedItem.reduce((acc, item) => {\r\n        acc[item.id] = item.actualQty || \"\";  // Set to actualQty or empty string\r\n        return acc;\r\n      }, {});\r\n      setActualQuantities(initialQuantities);\r\n    }\r\n  }, [ReleasedItem]); // This effect runs when ReleasedItem changes\r\n\r\n  const handleItemsUpdates = async () => {\r\n    const itemsforUpdate = (ReleasedItem || []).map((item) => ({\r\n      item_Id: item.id,\r\n      actualQty: actualQuantities[item.id] || item.actualQty,\r\n    }));\r\n\r\n    if (itemsforUpdate.length === 0) {\r\n      toast.warning(\"No items to update.\");\r\n      return;\r\n    }\r\n    console.log(`the released item whose id i want is ${JSON.stringify(ReleasedItem)}`)\r\n    const ReleasedItemsId = ReleasedItem.id;\r\n    console.log(`The released item ID is ${ReleasedItemsId}`);\r\n    \r\n\r\n    try {\r\n        \r\n        console.log(`the items for update  is ${JSON.stringify(itemsforUpdate)}`);\r\n      const response = await http.put(`/updateQty/${id}`, {\r\n        items: itemsforUpdate,\r\n      });\r\n      console.log(\"Items successfully updated:\", response.data);\r\n      if (response.data.success) {\r\n        toast.success(\"Items successfully updated!\");\r\n        setActualQuantities({});  // Reset quantities after update\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Failed to update quantities...\");\r\n      console.error(\"Error updating quantities:\", error);\r\n    }\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setShowModal(false); // Close the modal\r\n    if (onClose) onClose(); // If onClose prop exists, call it\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`modal ${showModal ? \"d-block\" : \"d-none\"}`}\r\n     \r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">Edit Consumption</h5>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            {ReleasedItem?.length > 0 && (\r\n              <>\r\n                <table className=\"table table-bordered table-striped\">\r\n                  <thead className=\"bg-dark text-white\">\r\n                    <tr>\r\n                      <th>Item Name</th>\r\n                      <th>Reference Qty</th>\r\n                      <th>Actual Qty</th>\r\n                      <th>UOM</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {ReleasedItem.map((ingredient) => (\r\n                      <tr key={ingredient.id}>\r\n                        <td>{ingredient.Item?.itemname || ingredient.id}</td>\r\n                        <td>{ingredient.referenceQty}</td>\r\n                        <td>\r\n                          <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            value={actualQuantities[ingredient.id] || \"\"}\r\n                            onChange={(e) =>\r\n                              handleActualQuantityChange(\r\n                                ingredient.id,\r\n                                e.target.value\r\n                              )\r\n                            }\r\n                          />\r\n                        </td>\r\n                        <td>{ingredient.uomname}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={handleItemsUpdates}\r\n                  >\r\n                    Update\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={handleCloseEdit}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DailyConsumptionEditComponent;\r\n\r\n","\r\nimport React, { useState } from \"react\";\r\nimport http from \"../../http-common\";\r\nimport DailyConsumptionEditComponent from \"./DailyConsumptionEditComponent\";\r\n\r\nexport const RecipeTable = ({ data }) => {\r\n  const [editRecipe, setEditRecipe] = useState(null); \r\n  const [recipeId,setRecipeId]=useState(Number);\r\n  \r\n  const categoryOrder = { Breakfast: 1, Launch: 2, Dinner: 3,  };\r\n\r\n  const sortedData = [...data].sort(\r\n    (a, b) =>\r\n      categoryOrder[a.RecipeCategory.category] - categoryOrder[b.RecipeCategory.category]\r\n  );\r\n\r\n \r\n  const deleteRecipe = async (dateId, categoryId, recipeId) => {\r\n    if (window.confirm(\"Are you sure you want to delete this recipe?\")) {\r\n      try {\r\n        const response = await http.delete(\r\n          `/daily-consumption/${dateId}/${categoryId}/${recipeId}`\r\n        );\r\n        alert(response.data.message);\r\n        window.location.reload(); // Refresh the page to reflect changes\r\n      } catch (error) {\r\n        console.error(\"Error deleting recipe:\", error);\r\n        alert(\"Failed to delete the recipe.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEdit = (recipe) => {\r\n    setEditRecipe(recipe); \r\n    setRecipeId(recipe.id);\r\n    console.log(`the recipe going to edit is  ${JSON.stringify(recipe)}`)\r\n  };\r\n\r\n  \r\n\r\n  const closeModal = () => {\r\n    setEditRecipe(null); // Close the modal\r\n  };\r\n\r\n  return (\r\n    <div className={`container ${editRecipe ? \"modal-active\" : \"\"}`}>\r\n      \r\n      {sortedData.map((recipe) => (\r\n        <div key={recipe.id} className=\"card mb-4 shadow-sm\">\r\n          <div className=\"card-header bg-primary text-white d-flex justify-content-between align-items-center\">\r\n            <h5 className=\"mb-0\">\r\n              {recipe.RecipeCategory.category} - {recipe.Recipe.recipe_name}\r\n            </h5>\r\n            <div>\r\n              <button\r\n                className=\"btn btn-warning btn-sm me-2 bi bi-pencil-fill\"\r\n                onClick={() => handleEdit(recipe)}\r\n              ></button>\r\n              <button\r\n                className=\"btn btn-danger btn-sm bi bi-trash-fill\"\r\n                onClick={() =>\r\n                  deleteRecipe(recipe.dateId, recipe.categoryId, recipe.recipeId)\r\n                }\r\n              ></button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"card-body\">\r\n            <table className=\"table table-striped table-hover mb-0\">\r\n              <thead className=\"table-dark\">\r\n                <tr>\r\n                  <th>Item Name (UOM)</th>\r\n                  <th>Reference Quantity</th>\r\n                  <th>Actual Quantity</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {recipe.ReleasedItems.map((item) => (\r\n                  <tr key={item.id}>\r\n                    <td>\r\n                      {item.Item.itemname} ({item.uomname})\r\n                    </td>\r\n                    <td>{item.referenceQty}</td>\r\n                    <td>{item.actualQty}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      {/* Render the modal when a recipe is being edited */}\r\n      {editRecipe && (\r\n        <DailyConsumptionEditComponent\r\n          ReleasedItem={editRecipe.ReleasedItems}\r\n          onClose={closeModal}\r\n          id={recipeId}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","\r\n\r\nimport React, { useState } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nconst CalendarComponent = ({ consumptionDays, onDateSelect }) => {\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  const handleDateChange = (date) => {\r\n    // Adjust date to local timezone\r\n    const localDate = new Date(date.getTime() - date.getTimezoneOffset() * 60000);\r\n\r\n    setSelectedDate(localDate);\r\n\r\n    if (onDateSelect) {\r\n      onDateSelect(localDate);\r\n      console.log(`The selected date in the React component: ${localDate.toISOString().split('T')[0]}`);\r\n    }\r\n  };\r\n\r\n  // Mark selected dates\r\n  const getTileClassName = ({ date }) => {\r\n    // Convert date to local YYYY-MM-DD format\r\n    const formattedDate = date.toLocaleDateString(\"en-CA\"); // 'YYYY-MM-DD' format\r\n    return consumptionDays?.some(\r\n      (day) => formattedDate === day.date.split(\"T\")[0]\r\n    )\r\n      ? \"highlight\"\r\n      : \"\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Calendar\r\n        onChange={handleDateChange}\r\n        value={selectedDate}\r\n        tileClassName={getTileClassName}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarComponent;\r\n","import moment from \"moment\";\r\nconst ConsumptionDays = ({ date, adultsCount, childrenCount }) => {\r\n  const formattedDate = moment(date).format('MMM D, YYYY'); \r\n\r\n  return (\r\n    <div className=\"bg-light d-flex justify-content-between p-2 mt-2 mb-2 rounded\">\r\n      <strong>Date: {formattedDate}</strong>\r\n      <br />\r\n      <strong>Adults: {adultsCount}</strong>\r\n      <br />\r\n      <strong>Children: {childrenCount}</strong>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConsumptionDays;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport http from \"../http-common\";\r\nimport { toast } from \"react-toastify\";\r\nimport useCategory from \"../hooks/useCategory\";\r\nimport useRecipe from \"../hooks/useRecipe\";\r\nimport { RecipeTable } from \"../Component/DailyConsumptionComponent/DailyConsumptionViewTable\";\r\nimport CalendarComponent from \"../Component/SharedComponent/CalendarComponent\";\r\nimport DropDownList from \"../app/signedin/components/dropdown/dropdown\";\r\nimport ConsumptionDays from \"../Component/ConsumptionDays/ConsumptionDays\";\r\nconst DailyConsumptionPage = () => {\r\n  const [consumptionDays, setConsumptionDays] = useState([]);\r\n  const [selectedDay, setSelectedDay] = useState(null);\r\n  const [dailyConsumptions, setDailyConsumptions] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [categories, setCategories] = useState(null);\r\n  const [recipe, setRecipe] = useState(null);\r\n  const [categoryId, setCategoryId] = useState(null);\r\n  const [recipeId, setRecipeId] = useState(null);\r\n  const [recipeIngredients, setRecipeIngredients] = useState([]);\r\n  const [actualQuantities, setActualQuantities] = useState({});\r\n  const [adultsCount, setAdultCount] = useState(\"\");\r\n  const [childrenCount, setChildernCount] = useState(\"\");\r\n  const [date, setDate] = useState();\r\n  const [categoryname, setCategoryname] = useState(\"\");\r\n  const [Recipename, setRecipename] = useState(\"\");\r\n  const [ReleasedItem, setReleasedItem] = useState([]);\r\n  const Recipe = useRecipe();\r\n  const category = useCategory();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const [daysResponse] = await Promise.all([http.get(\"/consumption-days\")]);\r\n      setConsumptionDays(daysResponse.data.consumptionDays);\r\n      console.log(`the all the consumption days is ${daysResponse.data.consumptionDays}`)\r\n    };\r\n    fetchData();\r\n    fetchingData();\r\n  }, [Recipe,category]);\r\n\r\n  const fetchingData = () => {\r\n    setRecipe(Recipe);\r\n    setCategories(category);\r\n  };\r\n  useEffect(() => {\r\n    if (selectedDay) {\r\n      const selectedDate = new Date(consumptionDays.find(day => day.id === selectedDay)?.date);\r\n      if (selectedDate) {\r\n        handleSelectDate(selectedDate);\r\n      }\r\n    }\r\n  }, [selectedDay, consumptionDays]);\r\n\r\n  const handleSelectDate = async (date) => {\r\n    const day = consumptionDays.find(\r\n      (day) =>\r\n        new Date(day.date).toISOString().split(\"T\")[0] ===\r\n        date.toISOString().split(\"T\")[0]\r\n    );\r\n    if (day) {\r\n      setSelectedDay(day.id);\r\n      setAdultCount(day.adults_count);\r\n      setChildernCount(day.children_count);\r\n      setDate(new Date(day.date).toISOString().split(\"T\")[0]);\r\n      try {\r\n        const response = await http.get(`/allconsumption/${day?.id}`);\r\n        if (response.data.success === true) {\r\n          setDailyConsumptions(response?.data?.data);\r\n        } else {\r\n          console.log(\"no data found\");\r\n          setDailyConsumptions([]);\r\n        }\r\n\r\n      } catch {\r\n        setDailyConsumptions([]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const GetIngredientsData = async () => {\r\n    try {\r\n      const DataFromReleased = await http.get(\r\n        `getdaily-consumption/${selectedDay}/${categoryId}/${recipeId}`\r\n      );\r\n\r\n      if (DataFromReleased.data.success === false) {\r\n        // Fetch ingredients for the recipe when not found in daily consumption\r\n        const response = await http.get(`/ingredient/${recipeId}`);\r\n        setRecipeIngredients(\r\n          response.data.ingredients.map((ingredient) => ({\r\n            ...ingredient,\r\n            actual_qty: \"\", // Allow input for actual quantities\r\n            editable: true, // Mark as editable\r\n          }))\r\n        );\r\n        setReleasedItem([]);\r\n\r\n        // Initialize actual quantities for the ingredients\r\n        const initialQuantities = response.data.ingredients.reduce(\r\n          (acc, ingredient) => ({\r\n            ...acc,\r\n            [ingredient.id]: \"\",\r\n          }),\r\n          {}\r\n        );\r\n        setActualQuantities(initialQuantities);\r\n      } else if (DataFromReleased.data.success === true) {\r\n        alert(\"data already exist\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleQuantityChange = (ingredientId, value) => {\r\n    setActualQuantities((prev) => ({\r\n      ...prev,\r\n      [ingredientId]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n\r\n      // Prepare the data for decreasing quantities\r\n      const decreaseData = recipeIngredients\r\n        .filter((ingredient) => ingredient.editable)\r\n        .map((ingredient) => ({\r\n          itemid: ingredient.item_id,\r\n          quantity: actualQuantities[ingredient.id] || 0,\r\n        }));\r\n\r\n      const dataToSubmit = recipeIngredients\r\n        .filter((ingredient) => ingredient.editable)\r\n        .map((ingredient) => ({\r\n          item_Id: ingredient.item_id,\r\n          referenceQty: ingredient.reference_qty,\r\n          uomname: ingredient.Item.Uom.uomname,\r\n          actualQty: actualQuantities[ingredient.id] || 0,\r\n        }));\r\n\r\n        const debitRecords = recipeIngredients\r\n        .filter((ingredient) => ingredient.editable)\r\n        .map((ingredient) => ({\r\n          date: date,\r\n          item_id: ingredient.item_id,\r\n          debit_quantity: actualQuantities[ingredient.id] || 0,\r\n          recipe_id: recipeId,\r\n          category_id: categoryId,\r\n          uom_id: ingredient.Item?.Uom?.id || 1\r\n        }));\r\n      console.log(`the debit records going to database is ${JSON.stringify(debitRecords)}`);\r\n      // Make API call to decrease quantities\r\n      const decreaseResponse = await http.post(\"/decrease-quantity\", {\r\n        items: decreaseData,\r\n      });\r\n\r\n      const transaction = await http.post(\"/bulk-transaction\", {\r\n        transactions: debitRecords,\r\n      });\r\n\r\n      console.log(`the transctions while releasing items is ${JSON.stringify(transaction)}`);\r\n\r\n\r\n      if (decreaseResponse.data.message === \"Bulk update completed\") {\r\n        await http.post(\"/createdaily-consumption\", {\r\n          dateId: selectedDay,\r\n          categoryId: categoryId,\r\n          recipeId: recipeId,\r\n          ingredients: dataToSubmit,\r\n        });\r\n\r\n        const response = await http.get(`/allconsumption/${selectedDay}`);\r\n        setDailyConsumptions(response?.data?.data);\r\n        toast.success(\"Data submitted successfully!\");\r\n        setShowModal(false);\r\n        setRecipeIngredients([]);\r\n        setActualQuantities({});\r\n        toast.success(\"Quantities decreased successfully!\");\r\n      } else {\r\n        toast.error(\"Error decreasing quantities.\");\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n    } catch (error) {\r\n      console.error(\"Error submitting data:\", error);\r\n      toast.error(\"Failed to submit data.\");\r\n    }\r\n  };\r\n  const handleRecipe = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCategoryChange = (selectedOption) => {\r\n    setCategoryId(selectedOption?.id || null);\r\n    setCategoryname(selectedOption?.value || \"\");\r\n  };\r\n\r\n  const handleRecipeChange = (selectedOption) => {\r\n    setRecipeId(selectedOption?.id || null);\r\n    setRecipename(selectedOption?.value || \"\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"20vh\" }} className=\"container\">\r\n      <h2 className=\"text-center\">Consumption page</h2>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <h5 className=\"text-center\">Consumption Days</h5>\r\n          <CalendarComponent\r\n            consumptionDays={consumptionDays}\r\n            onDateSelect={handleSelectDate}\r\n          />\r\n          <button className=\"btn btn-success w-100 mt-2\" onClick={handleRecipe}>\r\n            Add Recipe\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n          <h5 className=\"mb-4 text-center\">Daily Consumption Details</h5>\r\n          <ConsumptionDays\r\n            date={date}\r\n            adultsCount={adultsCount}\r\n            childrenCount={childrenCount}\r\n          />\r\n          <RecipeTable data={dailyConsumptions} />\r\n\r\n          {selectedDay && (\r\n            <div>\r\n              {/* Modal Section */}\r\n              <div\r\n                className={`modal modal-overlay ${showModal ? \"d-block\" : \"d-none\"}`}\r\n                tabIndex=\"-1\"\r\n                role=\"dialog\"\r\n\r\n              >\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                  <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                      <h5 className=\"modal-title\">Add Daily Consumption</h5>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                      <label htmlFor=\"CategoryId\" className=\"col-form-label\">Category</label>\r\n                      <DropDownList\r\n                        data={categories.map(cat => ({ id: cat.id, value: cat.category, label: cat.category }))}\r\n                        placeholder=\"Select Category\"\r\n                        isMulti={false}\r\n                        selectedValue={categoryId ? { id: categoryId, value: categoryname, label: categoryname } : null}\r\n                        onUpdateSelectedValue={handleCategoryChange}\r\n                      />\r\n\r\n                      <label htmlFor=\"RecipeId\" className=\"col-form-label\">Recipe</label>\r\n                      <DropDownList\r\n                        data={recipe.map(r => ({ id: r.id, value: r.recipe_name, label: r.recipe_name }))}\r\n                        placeholder=\"Select Recipe\"\r\n                        isMulti={false}\r\n                        selectedValue={recipeId ? { id: recipeId, value: Recipename, label: Recipename } : null}\r\n                        onUpdateSelectedValue={handleRecipeChange}\r\n                      />\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                      <button\r\n                        onClick={GetIngredientsData}\r\n                        className=\"btn btn-primary mt-2\"\r\n                      >\r\n                        Fetch Ingredients\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={() => setShowModal(false)}\r\n                      >\r\n                        Close\r\n                      </button>\r\n                      {/* Table to Display Ingredients */}\r\n                      {recipeIngredients.length > 0 && (\r\n                        <>\r\n                          <table className=\"table table-bordered table-striped table-responsive\">\r\n                            <thead className=\"bg-dark text-white\">\r\n                              <tr>\r\n                                <th>Item Name</th>\r\n                                <th>Reference Qty</th>\r\n                                <th>Actual Qty</th>\r\n                                <th>UOM</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {recipeIngredients.map((ingredient) => (\r\n                                <tr key={ingredient.id}>\r\n                                  <td>\r\n                                    {ingredient.Item?.itemname || ingredient.id}\r\n                                  </td>\r\n                                  <td>{ingredient.reference_qty}</td>\r\n                                  <td>\r\n                                    {ingredient.editable ? (\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        className=\"form-control\"\r\n                                        value={\r\n                                          actualQuantities[ingredient.id] || \"\"\r\n                                        }\r\n                                        onChange={(e) =>\r\n                                          handleQuantityChange(\r\n                                            ingredient.id,\r\n                                            e.target.value\r\n                                          )\r\n                                        }\r\n                                      />\r\n                                    ) : (\r\n                                      ingredient.actual_qty\r\n                                    )}\r\n                                  </td>\r\n                                  <td>\r\n                                    {ingredient.Item?.Uom?.uomname ||\r\n                                      ingredient.uomname}\r\n                                  </td>\r\n                                </tr>\r\n                              ))}\r\n                            </tbody>\r\n                          </table>\r\n                          {recipeIngredients.some((ing) => ing.editable) && (\r\n                            <div className=\"d-flex justify-content-end\">\r\n                              <button\r\n                                className=\"btn btn-success me-2\"\r\n                                onClick={handleSubmit}\r\n                              >\r\n                                Release Item\r\n                              </button>\r\n                              <button\r\n                                className=\"btn btn-danger\"\r\n                                onClick={() => setShowModal(false)}\r\n                              >\r\n                                Cancel\r\n                              </button>\r\n                            </div>\r\n                          )}\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DailyConsumptionPage;\r\n"],"names":["DropDownList","Component","constructor","props","super","handleChange","selectedOptions","this","setState","selectedValue","onUpdateSelectedValue","state","isMulti","componentDidUpdate","prevProps","render","data","placeholder","width","placeholderColor","menuPlacement","_jsx","className","children","Select","value","options","onChange","isClearable","styles","control","provided","cursor","color","menu","overflow","menuList","maxHeight","overflowY","useCategory","category","setCategory","useState","useEffect","async","http","get","categories","error","console","log","getCategory","useRecipe","Recipe","setRecipe","recipes","getRecipe","_ref","ReleasedItem","onClose","id","showModal","setShowModal","actualQuantities","setActualQuantities","length","initialQuantities","reduce","acc","item","actualQty","role","_jsxs","_Fragment","map","ingredient","_ingredient$Item","Item","itemname","referenceQty","type","e","handleActualQuantityChange","item_Id","target","prev","uomname","onClick","itemsforUpdate","toast","warning","JSON","stringify","ReleasedItemsId","response","put","items","success","handleCloseEdit","RecipeTable","editRecipe","setEditRecipe","recipeId","setRecipeId","Number","categoryOrder","Breakfast","Launch","Dinner","sortedData","sort","a","b","RecipeCategory","recipe","recipe_name","handleEdit","dateId","categoryId","window","confirm","delete","alert","message","location","reload","deleteRecipe","ReleasedItems","DailyConsumptionEditComponent","closeModal","consumptionDays","onDateSelect","selectedDate","setSelectedDate","Date","Calendar","date","localDate","getTime","getTimezoneOffset","toISOString","split","tileClassName","_ref2","formattedDate","toLocaleDateString","some","day","adultsCount","childrenCount","moment","format","DailyConsumptionPage","setConsumptionDays","selectedDay","setSelectedDay","dailyConsumptions","setDailyConsumptions","setCategories","setCategoryId","recipeIngredients","setRecipeIngredients","setAdultCount","setChildernCount","setDate","categoryname","setCategoryname","Recipename","setRecipename","setReleasedItem","daysResponse","Promise","all","fetchData","fetchingData","_consumptionDays$find","find","handleSelectDate","adults_count","children_count","_response$data","style","marginTop","CalendarComponent","handleRecipe","ConsumptionDays","tabIndex","htmlFor","cat","label","selectedOption","r","DataFromReleased","ingredients","actual_qty","editable","_ingredient$Item2","_ingredient$Item3","_ingredient$Item3$Uom","reference_qty","handleQuantityChange","ingredientId","Uom","ing","decreaseData","filter","itemid","item_id","quantity","dataToSubmit","debitRecords","_ingredient$Item$Uom","debit_quantity","recipe_id","category_id","uom_id","decreaseResponse","post","transaction","transactions","_response$data2"],"sourceRoot":""}