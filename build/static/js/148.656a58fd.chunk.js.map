{"version":3,"file":"static/js/148.656a58fd.chunk.js","mappings":"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","sources":["Component/SharedComponent/ChartComponent.js","Component/ChartsComponent/DailyChartContainer.js","Component/ChartsComponent/DateRangeConsumption.js","Component/ChartsComponent/DailyInventoryChartContainer.js","Component/ChartsComponent/InventoryDateRangeItemsChart.js","app/signedin/screens/home_screen.js"],"sourcesContent":["\r\nimport React from \"react\";\r\nimport {\r\n  Chart as ChartJS,\r\n  BarElement,\r\n  LineElement,\r\n  ArcElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\r\n\r\n// Register required components\r\nChartJS.register(\r\n  BarElement,\r\n  LineElement,\r\n  ArcElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst ChartComponent = ({ data, labels, type }) => {\r\n  const chartData = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"Inventory Data\",\r\n        data,\r\n        backgroundColor: [\"#36A2EB\", \"#FF6384\", \"#FFCE56\", \"#4BC0C0\"],\r\n        borderColor: [\r\n          \"rgba(75, 192, 192, 1)\",\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Chart options with adjustable height\r\n  const options = {\r\n    maintainAspectRatio: false, // Allow custom height\r\n    responsive: true,\r\n    aspectRatio: 2, // Adjust aspect ratio (width-to-height ratio)\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"350px\", width: \"100%\" }}> {/* Set custom height */}\r\n      {type === \"bar\" && <Bar data={chartData} options={options} />}\r\n      {type === \"line\" && <Line data={chartData} options={options} />}\r\n      {type === \"pie\" && <Pie data={chartData} options={options} />}\r\n      {type === \"doughnut\" && <Doughnut data={chartData} options={options} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ChartComponent from \"../SharedComponent/ChartComponent\";\r\nimport http from \"../../http-common\";\r\n\r\nconst DailyChartContainer = () => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [labels, setLabels] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [date, setDate] = useState(new Date());\r\n  const [page, setPage] = useState(1); // Pagination state\r\n  const [limit, setLimit] = useState(10); // Limit state\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [chartType, setChartType] = useState(\"bar\");\r\n  \r\n\r\n  useEffect(() => {\r\n    // Fetch API Data\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await http.post(\"/item-credit-data\", {\r\n          \"date\": date,\r\n          \"page\": page,\r\n          \"limit\": limit\r\n\r\n        });\r\n\r\n        const responseData = response.data;\r\n        const data = responseData.data;\r\n\r\n        // Process API Data for Chart\r\n        const itemNames = data.map((item) => item.itemName);\r\n        const quantities = data.map((item) => item.totalDebitQuantity);\r\n\r\n        setLabels(itemNames); // Set labels\r\n        setChartData(quantities); // Set data\r\n        setTotalPages(responseData.metadata.totalPages);\r\n\r\n        setLoading(false); // Mark as loaded\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    \r\n  }, [date, page, limit]);\r\n\r\n\r\n  // Handle Pagination\r\n  const handlePageChange = (newPage) => {\r\n    if (newPage >= 1 && newPage <= totalPages) {\r\n      setPage(newPage);\r\n    }\r\n  };\r\n\r\n  // Handle Limit Change\r\n  const handleLimitChange = (e) => {\r\n    setLimit(Number(e.target.value));\r\n    setPage(1); // Reset to the first page when limit changes\r\n  };\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n \r\n  return (\r\n    <div>\r\n      <div className=\"card-header d-flex justify-content-between\">\r\n        <h5>Select  Consumption Date</h5>\r\n        <div className=\"d-flex flex-column flex-sm-row align-items-start gap-2\">\r\n          <input\r\n            type=\"date\"\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n            className=\"form-control date-input w-100 w-sm-auto date-input\"\r\n          />\r\n        </div>\r\n     \r\n      </div>\r\n      <ChartComponent\r\n        data={chartData}\r\n        labels={labels}\r\n        type={chartType} // You can change this to \"line\" or \"pie\"\r\n        options={{\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              display: true,\r\n              position: \"top\",\r\n            },\r\n          },\r\n        }}\r\n      />\r\n        <div className=\"d-flex flex-column flex-md-row justify-content-between align-items-center gap-1\">\r\n        <nav className=\"mt-3 d-flex justify-content-start align-items-center\">\r\n        {/* Pagination */}\r\n        <ul className=\"pagination mb-0\">\r\n          {/* Previous Page */}\r\n          <li className={`page-item ${page === 1 ? \"disabled\" : \"\"}`}>\r\n            <button\r\n              className=\"page-link\"\r\n              onClick={() => handlePageChange(page - 1)}\r\n            >\r\n              Previous\r\n            </button>\r\n          </li>\r\n\r\n          {/* Page Numbers */}\r\n          {Array.from({ length: totalPages }).map((_, index) => {\r\n            const pageNum = index + 1;\r\n            return (\r\n              <li\r\n                key={pageNum}\r\n                className={`page-item ${page === pageNum ? \"active\" : \"\"}`}\r\n              >\r\n                <button\r\n                  className=\"page-link\"\r\n                  onClick={() => handlePageChange(pageNum)}\r\n                >\r\n                  {pageNum}\r\n                </button>\r\n              </li>\r\n            );\r\n          })}\r\n\r\n          {/* Next Page */}\r\n          <li\r\n            className={`page-item ${page === totalPages ? \"disabled\" : \"\"}`}\r\n          >\r\n            <button\r\n              className=\"page-link\"\r\n              onClick={() => handlePageChange(page + 1)}\r\n            >\r\n              Next\r\n            </button>\r\n          </li>\r\n        </ul>\r\n\r\n        {/* Rows Per Page */}\r\n        <div className=\"d-flex align-items-center ms-2\">\r\n\r\n          <select\r\n            id=\"rowsPerPage\"\r\n            value={limit}\r\n            onChange={handleLimitChange}\r\n            className=\"form-select w-auto\"\r\n          >\r\n            <option value={10}>10 Rows</option>\r\n            <option value={2}> 2 Rows</option>\r\n            <option value={20}>20 Rows</option>\r\n            <option value={25}>25 Rows</option>\r\n          </select>\r\n        </div>\r\n      </nav>\r\n      <div className=\"mt-3\">\r\n        <label className=\"me-2 fw-bold\">Select Chart Type:</label>\r\n        <select\r\n          value={chartType}\r\n          onChange={(e) => setChartType(e.target.value)}\r\n          className=\"form-select w-auto d-inline-block\"\r\n        >\r\n          <option value=\"bar\">Bar Chart</option>\r\n          <option value=\"line\">Line Chart</option>\r\n          <option value=\"pie\">Pie Chart</option>\r\n          <option value=\"doughnut\">Doughnut Chart</option>\r\n        </select>\r\n      </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default DailyChartContainer;\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import ChartComponent from \"../SharedComponent/ChartComponent\";\r\n// import http from \"../../http-common\";\r\n\r\n// const DailyChartContainer = () => {\r\n//   const [chartData, setChartData] = useState([]);\r\n//   const [labels, setLabels] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [date, setDate] = useState(new Date().toISOString().split('T')[0]);\r\n//   const [page, setPage] = useState(1);\r\n//   const [limit, setLimit] = useState(10);\r\n//   const [totalPages, setTotalPages] = useState(1);\r\n//   const [chartType, setChartType] = useState(\"bar\"); // Chart type state\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await http.post(\"/item-credit-data\", {\r\n//           date: date,\r\n//           page: page,\r\n//           limit: limit\r\n//         });\r\n\r\n//         const responseData = response.data;\r\n//         const data = responseData.data;\r\n//         const itemNames = data.map((item) => item.itemName);\r\n//         const quantities = data.map((item) => item.totalDebitQuantity);\r\n\r\n//         setLabels(itemNames);\r\n//         setChartData(quantities);\r\n//         setTotalPages(responseData.metadata.totalPages);\r\n//         setLoading(false);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, [date, page, limit]);\r\n\r\n//   const handlePageChange = (newPage) => {\r\n//     if (newPage >= 1 && newPage <= totalPages) {\r\n//       setPage(newPage);\r\n//     }\r\n//   };\r\n\r\n//   const handleLimitChange = (e) => {\r\n//     setLimit(Number(e.target.value));\r\n//     setPage(1);\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <div className=\"card-header d-flex justify-content-between\">\r\n//         <h5>Select Consumption Date</h5> \r\n//         <select\r\n//             value={chartType}\r\n//             onChange={(e) => setChartType(e.target.value)}\r\n//             className=\"form-select w-auto\"\r\n//           >\r\n//             <option value=\"bar\">Bar Chart</option>\r\n//             <option value=\"line\">Line Chart</option>\r\n//             <option value=\"pie\">Pie Chart</option>\r\n//             <option value=\"doughnut\">Doughnut Chart</option>\r\n//           </select>\r\n//         <div className=\"d-flex flex-column flex-sm-row align-items-start gap-2\">\r\n//           <input\r\n//             type=\"date\"\r\n//             value={date}\r\n//             onChange={(e) => setDate(e.target.value)}\r\n//             className=\"form-control date-input w-100 w-sm-auto\"\r\n//           />\r\n        \r\n//         </div>\r\n//       </div>\r\n//       <ChartComponent\r\n//         data={chartData}\r\n//         labels={labels}\r\n//         type={chartType}\r\n//         options={{\r\n//           responsive: true,\r\n//           plugins: {\r\n//             legend: {\r\n//               display: true,\r\n//               position: \"top\",\r\n//             },\r\n//           },\r\n//         }}\r\n//       />\r\n//       <nav className=\"mt-3 d-flex justify-content-start align-items-center\">\r\n//         <ul className=\"pagination mb-0\">\r\n//           <li className={`page-item ${page === 1 ? \"disabled\" : \"\"}`}>\r\n//             <button className=\"page-link\" onClick={() => handlePageChange(page - 1)}>\r\n//               Previous\r\n//             </button>\r\n//           </li>\r\n//           {Array.from({ length: totalPages }).map((_, index) => {\r\n//             const pageNum = index + 1;\r\n//             return (\r\n//               <li key={pageNum} className={`page-item ${page === pageNum ? \"active\" : \"\"}`}>\r\n//                 <button className=\"page-link\" onClick={() => handlePageChange(pageNum)}>\r\n//                   {pageNum}\r\n//                 </button>\r\n//               </li>\r\n//             );\r\n//           })}\r\n//           <li className={`page-item ${page === totalPages ? \"disabled\" : \"\"}`}>\r\n//             <button className=\"page-link\" onClick={() => handlePageChange(page + 1)}>\r\n//               Next\r\n//             </button>\r\n//           </li>\r\n//         </ul>\r\n//         <div className=\"d-flex align-items-center ms-2\">\r\n//           <select id=\"rowsPerPage\" value={limit} onChange={handleLimitChange} className=\"form-select w-auto\">\r\n//             <option value={10}>10 Rows</option>\r\n//             <option value={20}>20 Rows</option>\r\n//             <option value={25}>25 Rows</option>\r\n//           </select>\r\n//         </div>\r\n//       </nav>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DailyChartContainer;\r\n","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ChartComponent from \"../SharedComponent/ChartComponent\";\r\nimport http from \"../../http-common\";\r\n\r\nconst DateRangeConsumption = () => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [labels, setLabels] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(10);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n   const [chartType, setChartType] = useState(\"bar\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await http.post(\"/item-credit-consumption\", {\r\n          startDate,\r\n          endDate,\r\n          page,\r\n          limit,\r\n        });\r\n\r\n        const responseData = response.data;\r\n        const data = responseData.data;\r\n\r\n        if (!data || data.length === 0) {\r\n          setLabels([\"No Data\"]);\r\n          setChartData([0]);\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n        const itemNames = data.map((item) => item.itemName);\r\n        const quantities = data.map((item) => item.totalQuantity);\r\n\r\n        setLabels(itemNames);\r\n        setChartData(quantities);\r\n        setTotalPages(responseData.pagination.totalPages);\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [startDate, endDate, page, limit]);\r\n\r\n  // Handle Pagination\r\n  const handlePageChange = (newPage) => {\r\n    if (newPage >= 1 && newPage <= totalPages) {\r\n      setPage(newPage);\r\n    }\r\n  };\r\n\r\n  // Handle Limit Change\r\n  const handleLimitChange = (e) => {\r\n    setLimit(Number(e.target.value));\r\n    setPage(1); // Reset to the first page when limit changes\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n     <div className=\"card-header d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center\">\r\n  <h5 className=\"mb-3 mb-md-0\">Select  Consumption Date Range</h5>\r\n  <div className=\"d-flex flex-column flex-sm-row gap-2 w-100 w-md-auto\">\r\n    <input\r\n      type=\"date\"\r\n      value={startDate}\r\n      onChange={(e) => setStartDate(e.target.value)}\r\n      className=\"form-control\"\r\n    />\r\n    <input\r\n      type=\"date\"\r\n      value={endDate}\r\n      onChange={(e) => setEndDate(e.target.value)}\r\n      className=\"form-control\"\r\n    />\r\n  </div>\r\n \r\n</div>\r\n\r\n\r\n      <ChartComponent\r\n        data={chartData}\r\n        labels={labels}\r\n        type={chartType}\r\n        options={{\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              display: true,\r\n              position: \"top\",\r\n            },\r\n          },\r\n        }}\r\n      />\r\n\r\n      <div className=\"d-flex flex-column flex-md-row justify-content-between align-items-center gap-1\">\r\n      <nav className=\"mt-3 d-flex justify-content-start align-items-center\">\r\n        {/* Pagination */}\r\n        <ul className=\"pagination mb-0\">\r\n          {/* Previous Page */}\r\n          <li className={`page-item ${page === 1 ? \"disabled\" : \"\"}`}>\r\n            <button\r\n              className=\"page-link\"\r\n              onClick={() => handlePageChange(page - 1)}\r\n            >\r\n              Previous\r\n            </button>\r\n          </li>\r\n\r\n          {/* Page Numbers */}\r\n          {Array.from({ length: totalPages }).map((_, index) => {\r\n            const pageNum = index + 1;\r\n            return (\r\n              <li\r\n                key={pageNum}\r\n                className={`page-item ${page === pageNum ? \"active\" : \"\"}`}\r\n              >\r\n                <button\r\n                  className=\"page-link\"\r\n                  onClick={() => handlePageChange(pageNum)}\r\n                >\r\n                  {pageNum}\r\n                </button>\r\n              </li>\r\n            );\r\n          })}\r\n\r\n          {/* Next Page */}\r\n          <li\r\n            className={`page-item ${page === totalPages ? \"disabled\" : \"\"}`}\r\n          >\r\n            <button\r\n              className=\"page-link\"\r\n              onClick={() => handlePageChange(page + 1)}\r\n            >\r\n              Next\r\n            </button>\r\n          </li>\r\n        </ul>\r\n\r\n        {/* Rows Per Page */}\r\n        <div className=\"d-flex align-items-center ms-2\">\r\n         \r\n          <select\r\n            id=\"rowsPerPage\"\r\n            value={limit}\r\n            onChange={handleLimitChange}\r\n            className=\"form-select w-auto\"\r\n          >\r\n            <option value={10}>10 Rows</option>\r\n            <option value={15}>15 Rows</option>\r\n            <option value={20}>20 Rows</option>\r\n            <option value={25}>25 Rows</option>\r\n          </select>\r\n        </div>\r\n      </nav>\r\n      <div className=\"mt-3\">\r\n        <label className=\"me-2 fw-bold\">Select Chart Type:</label>\r\n        <select\r\n          value={chartType}\r\n          onChange={(e) => setChartType(e.target.value)}\r\n          className=\"form-select w-auto d-inline-block\"\r\n        >\r\n          <option value=\"bar\">Bar Chart</option>\r\n          <option value=\"line\">Line Chart</option>\r\n          <option value=\"pie\">Pie Chart</option>\r\n          <option value=\"doughnut\">Doughnut Chart</option>\r\n        </select>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateRangeConsumption;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ChartComponent from \"../SharedComponent/ChartComponent\";\r\nimport http from \"../../http-common\";\r\n\r\nconst DailyInventoryChartContainer = () => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [labels, setLabels] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [date, setDate] = useState(new Date());\r\n  const [page, setPage] = useState(1); // Pagination state\r\n  const [limit, setLimit] = useState(10); // Limit state\r\n  const [totalPages, setTotalPages] = useState(1);\r\nconst [chartType, setChartType] = useState(\"bar\"); // Default chart type\r\n  \r\n  // Total pages from metadata\r\n\r\n  useEffect(() => {\r\n    // Fetch API Data\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await http.post(\"/inventory-itemsByDate\", {\r\n          \"date\": date,\r\n          \"page\": page,\r\n          \"limit\": limit\r\n\r\n        });\r\n\r\n        const responseData = response.data;\r\n        const data = responseData.data;\r\n\r\n        // Process API Data for Chart\r\n        const itemNames = data.map((item) => item.itemName);\r\n        const quantities = data.map((item) => item.totalDebitQuantity);\r\n\r\n        setLabels(itemNames); // Set labels\r\n        setChartData(quantities); // Set data\r\n        setTotalPages(responseData.metadata.totalPages);\r\n\r\n        setLoading(false); // Mark as loaded\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [date, page, limit]);\r\n\r\n\r\n  // Handle Pagination\r\n  const handlePageChange = (newPage) => {\r\n    if (newPage >= 1 && newPage <= totalPages) {\r\n      setPage(newPage);\r\n    }\r\n  };\r\n\r\n  // Handle Limit Change\r\n  const handleLimitChange = (e) => {\r\n    setLimit(Number(e.target.value));\r\n    setPage(1); // Reset to the first page when limit changes\r\n  };\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card-header d-flex justify-content-between\">\r\n        <h5>Select Inventory Date</h5>\r\n        <div className=\"d-flex flex-column flex-sm-row align-items-start gap-2\">\r\n          <input\r\n            type=\"date\"\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n            className=\"form-control date-input w-100 w-sm-auto date-input\"\r\n          />\r\n        </div>\r\n       \r\n      </div>\r\n      <ChartComponent\r\n        data={chartData}\r\n        labels={labels}\r\n        type={chartType} // You can change this to \"line\" or \"pie\"\r\n        options={{\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              display: true,\r\n              position: \"top\",\r\n            },\r\n          },\r\n        }}\r\n      />\r\n<div className=\"d-flex flex-column flex-md-row justify-content-between align-items-center gap-1\">\r\n  {/* Left Side - Pagination & Rows Per Page */}\r\n  <nav className=\"mt-3 d-flex align-items-center\">\r\n    {/* Pagination */}\r\n    <ul className=\"pagination mb-0\">\r\n      {/* Previous Page */}\r\n      <li className={`page-item ${page === 1 ? \"disabled\" : \"\"}`}>\r\n        <button className=\"page-link\" onClick={() => handlePageChange(page - 1)}>\r\n          Previous\r\n        </button>\r\n      </li>\r\n\r\n      {/* Page Numbers */}\r\n      {Array.from({ length: totalPages }).map((_, index) => {\r\n        const pageNum = index + 1;\r\n        return (\r\n          <li key={pageNum} className={`page-item ${page === pageNum ? \"active\" : \"\"}`}>\r\n            <button className=\"page-link\" onClick={() => handlePageChange(pageNum)}>\r\n              {pageNum}\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n\r\n      {/* Next Page */}\r\n      <li className={`page-item ${page === totalPages ? \"disabled\" : \"\"}`}>\r\n        <button className=\"page-link\" onClick={() => handlePageChange(page + 1)}>\r\n          Next\r\n        </button>\r\n      </li>\r\n    </ul>\r\n\r\n    {/* Rows Per Page */}\r\n    <div className=\"d-flex align-items-center ms-2\">\r\n      <select id=\"rowsPerPage\" value={limit} onChange={handleLimitChange} className=\"form-select w-auto\">\r\n        <option value={10}>10 rows</option>\r\n        <option value={15}>15 rows</option>\r\n        <option value={20}>20 rows</option>\r\n        <option value={25}>25 rows</option>\r\n      </select>\r\n    </div>\r\n  </nav>\r\n\r\n  {/* Right Side - Chart Type Selector */}\r\n  <div className=\"d-flex align-items-center\">\r\n    <label className=\"me-2 fw-bold\">Select Chart Type:</label>\r\n    <select value={chartType} onChange={(e) => setChartType(e.target.value)} className=\"form-select w-auto\">\r\n      <option value=\"bar\">Bar Chart</option>\r\n      <option value=\"line\">Line Chart</option>\r\n      <option value=\"pie\">Pie Chart</option>\r\n      <option value=\"doughnut\">Doughnut Chart</option>\r\n    </select>\r\n  </div>\r\n</div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default DailyInventoryChartContainer;\r\n","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ChartComponent from \"../SharedComponent/ChartComponent\";\r\nimport http from \"../../http-common\";\r\n\r\nconst InventoryDateRangeItemsChart = () => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [labels, setLabels] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(10);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [chartType, setChartType] = useState(\"bar\"); // Default chart type\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await http.post(\"/inventory-items-byDateRange\", {\r\n          startDate,\r\n          endDate,\r\n          page,\r\n          limit,\r\n        });\r\n\r\n        const responseData = response.data;\r\n        const data = responseData.data;\r\n\r\n        if (!data || data.length === 0) {\r\n          setLabels([\"No Data\"]);\r\n          setChartData([0]);\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n        const itemNames = data.map((item) => item.itemName);\r\n        const quantities = data.map((item) => item.totalQuantity);\r\n\r\n        setLabels(itemNames);\r\n        setChartData(quantities);\r\n        setTotalPages(responseData.pagination.totalPages);\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [startDate, endDate, page, limit]);\r\n\r\n  // Handle Pagination\r\n  const handlePageChange = (newPage) => {\r\n    if (newPage >= 1 && newPage <= totalPages) {\r\n      setPage(newPage);\r\n    }\r\n  };\r\n\r\n  // Handle Limit Change\r\n  const handleLimitChange = (e) => {\r\n    setLimit(Number(e.target.value));\r\n    setPage(1); // Reset to the first page when limit changes\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card-header d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center\">\r\n        <h5 className=\"mb-3 mb-md-0\">Select Inventory Date Range</h5>\r\n        <div className=\"d-flex flex-column flex-sm-row gap-2 w-100 w-md-auto\">\r\n          <input\r\n            type=\"date\"\r\n            value={startDate}\r\n            onChange={(e) => setStartDate(e.target.value)}\r\n            className=\"form-control\"\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            value={endDate}\r\n            onChange={(e) => setEndDate(e.target.value)}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Chart Type Selection */}\r\n     \r\n\r\n      {/* Chart Component */}\r\n      <ChartComponent\r\n        data={chartData}\r\n        labels={labels}\r\n        type={chartType} // Dynamic chart type\r\n        options={{\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              display: true,\r\n              position: \"top\",\r\n            },\r\n          },\r\n        }}\r\n      />\r\n\r\n      {/* Pagination and Rows Per Page */}\r\n   <div className=\"d-flex flex-column flex-md-row justify-content-between align-items-center gap-1\">\r\n   <nav className=\"mt-3 d-flex justify-content-start align-items-center\">\r\n        <ul className=\"pagination mb-0\">\r\n          <li className={`page-item ${page === 1 ? \"disabled\" : \"\"}`}>\r\n            <button className=\"page-link\" onClick={() => handlePageChange(page - 1)}>\r\n              Previous\r\n            </button>\r\n          </li>\r\n\r\n          {Array.from({ length: totalPages }).map((_, index) => {\r\n            const pageNum = index + 1;\r\n            return (\r\n              <li key={pageNum} className={`page-item ${page === pageNum ? \"active\" : \"\"}`}>\r\n                <button className=\"page-link\" onClick={() => handlePageChange(pageNum)}>\r\n                  {pageNum}\r\n                </button>\r\n              </li>\r\n            );\r\n          })}\r\n\r\n          <li className={`page-item ${page === totalPages ? \"disabled\" : \"\"}`}>\r\n            <button className=\"page-link\" onClick={() => handlePageChange(page + 1)}>\r\n              Next\r\n            </button>\r\n          </li>\r\n        </ul>\r\n\r\n        <div className=\"d-flex align-items-center ms-2\">\r\n          <select id=\"rowsPerPage\" value={limit} onChange={handleLimitChange} className=\"form-select w-auto\">\r\n            <option value={10}>10 Rows</option>\r\n            <option value={15}>15 Rows</option>\r\n            <option value={20}>20 Rows</option>\r\n            <option value={25}>25 Rows</option>\r\n          </select>\r\n        </div>\r\n      </nav>\r\n      \r\n      <div className=\"mt-3\">\r\n        <label className=\"me-2 fw-bold\">Select Chart Type:</label>\r\n        <select\r\n          value={chartType}\r\n          onChange={(e) => setChartType(e.target.value)}\r\n          className=\"form-select w-auto d-inline-block\"\r\n        >\r\n          <option value=\"bar\">Bar Chart</option>\r\n          <option value=\"line\">Line Chart</option>\r\n          <option value=\"pie\">Pie Chart</option>\r\n          <option value=\"doughnut\">Doughnut Chart</option>\r\n        </select>\r\n      </div>\r\n   </div>\r\n      </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default InventoryDateRangeItemsChart;\r\n","import React, { Component } from 'react';\r\nimport DailyChartContainer from '../../../Component/ChartsComponent/DailyChartContainer';\r\nimport DateRangeConsumption from '../../../Component/ChartsComponent/DateRangeConsumption';\r\nimport DailyInventoryChartContainer from '../../../Component/ChartsComponent/DailyInventoryChartContainer';\r\nimport InventoryDateRangeItemsChart from '../../../Component/ChartsComponent/InventoryDateRangeItemsChart';\r\n\r\n\r\nexport default class WelcomeScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { isOperator, isAdmin, isOwner, currentUser } = this.props;\r\n        let roleMessage = [];\r\n\r\n        if (isOwner) {\r\n            roleMessage.push(\"You are an owner\");\r\n        }\r\n        if (isAdmin) {\r\n            roleMessage.push(\"You are an admin\");\r\n        }\r\n        if (isOperator) {\r\n            roleMessage.push(\"You are an operator\");\r\n        }\r\n\r\n        return (\r\n            <div className=\"row mx-0 justify-content-center mb-5 mt-100\">\r\n                <div className=\"col-md-10 px-0\">\r\n                    <div className=\"row mx-0 p-3 shadow rounded-4\">\r\n                        <div className=\"px-0\">\r\n                            <h3 className=\"mb-3 text-warning\">\r\n                                Welcome {currentUser.username}...\r\n                            </h3>\r\n\r\n                            <div className=\"d-flex flex-column h-80\">\r\n                                <div className=\"card m-0 p-0 w-100 \">\r\n                                    <div className=\"rounded-3 w-100 \">\r\n                                        <div className=\"h-25\">\r\n                                           \r\n                                            <DailyInventoryChartContainer/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"p-2 mt-5\"></div>\r\n                                <div className=\"card m-0 p-0 w-100 \">\r\n                                    <div className=\"w-100 rounded-3 \">\r\n                                      \r\n                                        <InventoryDateRangeItemsChart/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex flex-column mt-5 h-80\">\r\n                                <div className=\"card m-0 p-0 w-100 \">\r\n                                    <div className=\"rounded-3 w-100 \">\r\n                                        <div className=\"h-25\">\r\n                                           \r\n                                            <DailyChartContainer/>\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"p-2 mt-5\"></div>\r\n                                <div className=\"card m-0 p-0 w-100 \">\r\n                                    <div className=\"w-100 rounded-3 \">\r\n                                      \r\n                                        <DateRangeConsumption/>\r\n                                     \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"p-2\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n"],"names":["ChartJS","register","BarElement","LineElement","ArcElement","CategoryScale","LinearScale","PointElement","Tooltip","Legend","_ref","data","labels","type","chartData","datasets","label","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","responsive","aspectRatio","_jsxs","style","height","width","children","_jsx","Bar","Line","Pie","Doughnut","DailyChartContainer","setChartData","useState","setLabels","loading","setLoading","date","setDate","Date","page","setPage","limit","setLimit","totalPages","setTotalPages","chartType","setChartType","useEffect","async","responseData","http","post","itemNames","map","item","itemName","quantities","totalDebitQuantity","metadata","error","console","fetchData","handlePageChange","newPage","className","value","onChange","e","target","ChartComponent","plugins","legend","display","position","onClick","Array","from","length","_","index","pageNum","id","Number","DateRangeConsumption","startDate","setStartDate","endDate","setEndDate","totalQuantity","pagination","DailyInventoryChartContainer","InventoryDateRangeItemsChart","WelcomeScreen","Component","constructor","props","super","render","isOperator","isAdmin","isOwner","currentUser","this","roleMessage","push","username"],"sourceRoot":""}